name: CI

on:
  push:
    branches: ["**"]
  schedule:
    - cron: "0 4 * * 3" # Every Wednesday at 4:00 UTC

permissions:
  contents: read # For actions/checkout@v4

jobs:
  Unit:
    name: PHPUnit tests on ubuntu-latest
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo_mysql, pdo_sqlite
          coverage: xdebug
          tools: composer

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Run unit test coverage report
        run: ./vendor/bin/phpunit --testsuite="Unit" --coverage-text="coverage_text.txt" --coverage-html="coverage_html"

      - name: Send coverage report to step summary
        run: cat coverage_text.txt >> $GITHUB_STEP_SUMMARY

      - name: Create archive for coverage html
        run: tar -czvf coverage_html.tar.gz coverage_html

      - name: Upload coverage html archive
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          overwrite: true
          path: ./coverage_html.tar.gz

  Integration:
    name: Integration tests on ubuntu-latest
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: mbstring, pdo_mysql, pdo_sqlite
          coverage: xdebug
          tools: composer

      - name: Install dependencies
        run: composer install --no-interaction --no-progress

      - name: Change permissions
        run: |
          chmod +x ./tests/Integration/setup.sh
          chmod +x ./tests/Integration/create_database_with_user.sh
          chmod +x ./tests/Integration/data.sql

      - name: Installing packages
        run: ./tests/Integration/setup.sh

      - name: Create database with user
        run: ./tests/Integration/create_database_with_user.sh projom projom Integration

      - name: Creating database tables with mock data
        run: mysql --user=projom --password=projom < ./tests/Integration/data.sql

      - name: Run integration test suite
        run: ./vendor/bin/phpunit --testsuite="Integration"

  Psalm:
    name: Psalm static security analysis on ubuntu-latest
    runs-on: ubuntu-latest
    permissions:
      security-events: write # For github/codeql-action/upload-sarif to upload results

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Psalm security scan
        uses: docker://ghcr.io/psalm/psalm-github-actions
        with:
          security_analysis: true
          show_info: true
          report_file: results.sarif
        continue-on-error: true

      - name: Upload security analysis results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
